import tkinter as tk
from tkinter import ttk, messagebox, Text, colorchooser
import datetime as dt
import os
import time

# Data
buku = {}
tday = dt.date.today()
hari = tday.strftime("%A")  # Mengambil nama hari dalam bahasa Inggris
tanggal = "Today is " + hari + ", " + str(tday)


# Load dari file
def load_catatan():
    if os.path.exists("catatan.txt"):
        with open("catatan.txt", "r") as file:
            data = file.read().strip()
            catatan_list = data.split("\n~\n")
            for catatan in catatan_list:
                lines = catatan.strip().splitlines()
                if len(lines) >= 2:
                    judul = lines[0]
                    tanggal_ctt = lines[1]
                    isi = "\n".join(lines[2:])
                    buku[judul] = {"tanggal": tanggal_ctt, "isi": isi}

# Save ke file
def save_catatan():
    with open("catatan.txt", "w") as file:
        for judul, detail in buku.items():
            file.write(f"{judul}\n{detail['tanggal']}\n{detail['isi']}\n~\n")

# Aplikasi Tkinter
root = tk.Tk()
root.title("Diary App")
root.geometry("600x400")  # Ukuran awal
root.resizable(True, True)  # Mengizinkan resize (default: True)
root.minsize(400, 300)  # Ukuran minimum

# Frame Utama (mengisi seluruh jendela)
frame_utama = tk.Frame(root)
frame_utama.pack(fill="both", expand=True)  # Expand saat di-resize
warna_all = '#ffffff'

#intro page
name=tk.StringVar()
label_name= tk.Label(frame_utama, text='Type Your Name', font=('Comic Sans', 15))
label_name.pack(pady=15)
entry_name= tk.Entry (frame_utama, width=25)
entry_name.pack(pady=10)


# Fungsi untuk mengubah warna frame
def ubah_warna():
    warna = colorchooser.askcolor()[1]
    global warna_all
    if warna:
        warna_all= warna
        frame_utama.config(bg=warna_all)
        
# Navigasi tombol
def buka_buat_catatan():
    win = tk.Toplevel(root)
    win.title("Buat Catatan Baru")
    win.resizable(True, True)  # Jendela pembuat catatan tidak di-resize
    win.config(bg=warna_all)

    tk.Label(win, text=tanggal, bg=warna_all).pack()
    tk.Label(win, text="Judul:").pack()
    ent_judul = tk.Entry(win, width=50)
    ent_judul.pack()

    tk.Label(win, text="Isi:").pack()
    txt_isi = Text(win, height=10)
    txt_isi.pack()

    def simpan():
        judul = ent_judul.get().strip()
        isi = txt_isi.get("1.0", tk.END).strip()
        if not judul:
            messagebox.showwarning("Peringatan", "Judul tidak boleh kosong")
            return
        buku[judul] = {'tanggal': tanggal, 'isi': isi}
        save_catatan()
        messagebox.showinfo("Sukses", "Catatan disimpan!")
        win.destroy()

    tk.Button(win, text="Simpan", command=simpan).pack(pady=5)

def buka_lihat_catatan():
    win = tk.Toplevel(root)
    win.title("Lihat Catatan")
    win.resizable(True, True)  # Jendela lihat catatan bisa di-resize
    win.config(bg=warna_all)

    # Frame untuk listbox dan tombol
    frame_list = tk.Frame(win)
    frame_list.pack(fill="both", expand=True, padx=10, pady=5)

    listbox = tk.Listbox(frame_list, width=50)
    listbox.pack(side="left", fill="both", expand=True)

    scrollbar = tk.Scrollbar(frame_list, orient="vertical", command=listbox.yview)
    scrollbar.pack(side="right", fill="y")
    listbox.config(yscrollcommand=scrollbar.set)

    for judul in buku:
        listbox.insert(tk.END, judul)

    # Frame untuk teks dan tombol
    frame_text = tk.Frame(win)
    frame_text.pack(fill="both", expand=True, padx=10, pady=5)

    txt = Text(frame_text, height=10)
    txt.pack(fill="both", expand=True)

    # Frame untuk tombol edit/hapus
    frame_buttons = tk.Frame(win)
    frame_buttons.pack(fill="x", padx=10, pady=5)

    def tampilkan_isi(evt):
        idx = listbox.curselection()
        if not idx:
            return
        judul = listbox.get(idx)
        detail = buku[judul]
        txt.delete("1.0", tk.END)
        txt.insert(tk.END, f"Tanggal: {detail['tanggal']}\n\n{detail['isi']}")

    def hapus():
        idx = listbox.curselection()
        if not idx:
            return
        judul = listbox.get(idx)
        if messagebox.askyesno("Konfirmasi", f"Hapus catatan '{judul}'?"):
            del buku[judul]
            save_catatan()
            listbox.delete(idx)
            txt.delete("1.0", tk.END)

    def edit():
        idx = listbox.curselection()
        if not idx:
            return
        judul = listbox.get(idx)
        detail = buku[judul]

        edit_win = tk.Toplevel(win)
        edit_win.title("Edit Catatan")
        edit_win.resizable(False, False)
        edit_win.config(bg=warna_all)

        tk.Label(edit_win, text=f"Judul: {judul}").pack()
        txt_edit = Text(edit_win, height=10)
        txt_edit.insert(tk.END, detail['isi'])
        txt_edit.pack()

        def simpan_edit():
            buku[judul]['isi'] = txt_edit.get("1.0", tk.END).strip()
            save_catatan()
            messagebox.showinfo("Sukses", "Catatan diperbarui.")
            edit_win.destroy()

        tk.Button(edit_win, text="Simpan", command=simpan_edit).pack()

    listbox.bind("<<ListboxSelect>>", tampilkan_isi)
    tk.Button(frame_buttons, text="Edit", command=edit).pack(side="left", padx=5)
    tk.Button(frame_buttons, text="Hapus", command=hapus).pack(side="right", padx=5)

# Tombol menu utama

def main_page():
    label_welcome = tk.Label(
        frame_utama, 
        text=f"Welcome to Diary App, {name.get()}! ", 
        background=warna_all,
        font=("Arial", 18))
    label_welcome.pack(pady=10)
    tk.Button(frame_utama, text="Buat Catatan Baru", width=30, command=buka_buat_catatan).pack(pady=5)
    tk.Button(frame_utama, text="Lihat Catatan", width=30, command=buka_lihat_catatan).pack(pady=5)
    tk.Button(frame_utama, text="Ubah Warna Frame", width=30, command=ubah_warna).pack(pady=5)
    tk.Button(frame_utama, text="Keluar", width=30, command=root.destroy).pack(pady=5)


def loading():
    gantiwarna1.destroy()
    name.set(entry_name.get())
    teks= tk.Label(frame_utama,text='Loading...', bg=warna_all)
    teks.pack()
    label_name.destroy()
    entry_name.destroy()
    login.destroy()
    
    progress = ttk.Progressbar(frame_utama, length=200, mode='indeterminate')
    progress.pack(pady=10)
    progress.start(10)
    
    # Fungsi untuk membersihkan dan menampilkan halaman utama
    def selesai_loading():
        progress.destroy()
        teks.destroy()
        main_page()
    
    # Atur timer untuk membersihkan setelah 3 detik (3000ms)
    frame_utama.after(3000, selesai_loading)
    

login= tk.Button(frame_utama, text='Login', command=loading)
login.pack (pady=5)
gantiwarna1=tk.Button(root, text="Ubah Warna Frame", command=ubah_warna)
gantiwarna1.pack(pady=5)
# Load data dan jalankan
load_catatan()
root.mainloop()
